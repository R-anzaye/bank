{"version":3,"sources":["components/AddTransactionForm.js","components/TransactionsList.js","components/Search.js","components/AccountContainer.js","components/App.js","index.js"],"names":["AddTransactionForm","useState","date","setDate","description","setDescription","category","setCategory","amount","setAmount","className","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","type","name","value","onChange","target","placeholder","step","TransactionsList","transactions","map","trans","onClick","transId","id","catch","error","Search","setTransactions","searchTerm","setSearchTerm","useEffect","filteredTransactions","filter","transaction","toLowerCase","includes","AccountContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9e1b0a7.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\nfunction AddTransactionForm() {\n  // Initialization of the state component remembering it has to be rendered by importing it first\n // The statesare specifically for the 4 data inputs that we have\n  const [date, setDate] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [amount, setAmount] = useState(0)\n\n  // the handle submit function that is rendered to our form\n  function handleSubmit(e) {\n    // Prevents default refreshing of the form and loosing the data after data has been placed\n    e.preventDefault()\n    //What this does is that is removes the data placed in the input holders making it empty as it was initially\n    setAmount(\"\")\n    setCategory(\"\")\n    setDescription(\"\")\n    setDate(\"\")\n\n// just like javascript jsx enables us to use fetch function to fetch data from db.json and display it as post\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        // This the data we are placing in the body that is date, description,category and amount\n        date,\n        description,\n        category,\n        amount,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n      })\n  }\n// Whatever is added is the onsubmit callback function(handleSubmit ) and also the value of every input not forgetting onChange taht basically captures the users input.\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        {/* This is the submit button that is rendered with the submit as type */}\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddTransactionForm\n\n\n","import React from \"react\";\n\nfunction TransactionsList({ transactions }) {\n    // Define the delete function\n    function handleDelete(transId) {\n      fetch(`http://localhost:8001/transactions/${transId}`, {\n        method: 'DELETE',\n      })\n      .then(response => response.json())\n      .then(data => { \n        console.log(data);\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n      });\n    }\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n        {/* Map over filtered transactions fromcsearch and render each transaction */}\n        {transactions.map((trans) => (\n          <tr key={trans.id}>\n            <td>{trans.date}</td>\n            <td>{trans.description}</td>\n            <td>{trans.category}</td>\n            <td>{trans.amount}</td>\n            <td>\n            {/* Pass the transaction id to the delete function */}\n            <button onClick={() => handleDelete(trans.id)}>Delete</button>\n          </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default TransactionsList\n","// importation use state, use effect and react all at once\nimport React, { useState, useEffect } from \"react\"\n\n// two components that is AddTransactionForm and TransactionLIst have been rendered from their respective file still in components\nimport AddTransactionForm from \"./AddTransactionForm\"\nimport TransactionsList from \"./TransactionsList\"\n\nfunction Search() {\n  \n  const [transactions, setTransactions] = useState([])// Initialize state for transactions\n  const [searchTerm, setSearchTerm] = useState(\"\") // Initialize state for search term\n \n  /*This is how we fetch data from db.json with an inbuild react \n  component that takes data form db.json and places it inside the setTransactions() function as data*/\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTransactions(data)\n      })\n  }, [])\n\n  /* Filter transactions based on search term. Whatever\n   is added is how to make sure the filtered data changes all te input to lowercase for the user to have easy search condition and the search data also transformed to lowercase*/\n  const filteredTransactions = transactions.filter(transaction =>\n    transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  return (\n    <div>\n      <div className=\"ui large fluid icon input\">\n        <input\n          type=\"text\"\n          placeholder=\"Search your Recent Transactions\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <i className=\"circular search link icon\"></i>\n      </div>\n       {/*The transaction form is placed here do display the appropriate column headings*/}\n      <AddTransactionForm />\n      {/* Pass filteredTransactions as a prop to TransactionsList */}\n      <TransactionsList transactions={filteredTransactions} />\n    </div>\n  )\n}\n// exporting of the search component\n\nexport default Search\n","import React from \"react\";\nimport Search from \"./Search\";\n// importation of react elements\n\n\n// a function with AccountContainer component with a search componet from the search file that is in the componets folder.\nfunction AccountContainer() {\n  return (\n    <div>\n      <Search />\n      \n    </div>\n  );\n}\n// exporting of the account container\nexport default AccountContainer;\n","import AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}